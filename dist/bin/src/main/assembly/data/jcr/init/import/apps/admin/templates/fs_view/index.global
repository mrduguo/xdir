<#include "parent:index.global">
<#if (baseFolder??)>
	<@list_files/>
</#if>
<#macro list_files>
<#assign groovy = "org.duguo.xdir.core.internal.template.freemarker.GroovyDirective"?new()>
<@groovy>
	def ouputstring=""
	
	baseFolder=model.get("baseFolder")
	baseLink="${pagePath}"
	model.setPagePath(null)
	
	pageNavLevel1=null
	pageNavLevel2=null
	pageNavLevel3=baseFolder
	while((currentPath=model.pathInfo.getCurrentPath())!=null){
		pageNavLevel1=pageNavLevel2
		pageNavLevel2=pageNavLevel3
		pageNavLevel3=new File(pageNavLevel3,currentPath)
		if(!pageNavLevel3.exists()){
			pageNavLevel3=model.get("file")
			if(pageNavLevel3==null){
				model.response.sendError(404)
				return "";
			}
		}
		model.addPageNavPath(pageNavLevel3.name,pageNavLevel3.name)
		model.pathInfo.moveToNextPath()
	}
	model.put("baseFolder",pageNavLevel3)
	<@list_nav_level 1/>
	<@list_nav_level 2/>
	<@list_nav_level 3/>

	return ouputstring
</@groovy>
</#macro>
<#macro list_nav_level currentLevel>	
	if(pageNavLevel${currentLevel}!=null){
		navLinks=new java.util.HashMap()
		pageNavLevel${currentLevel}.listFiles().each(){
			fileName=it.name
			fileLink=new java.util.HashMap()
            if(baseFolder.path.length()==1){
			    fileLink.put("url",baseLink+(it.path)+"${format}")
            }else{
			    fileLink.put("url",baseLink+(it.path.substring(baseFolder.path.length()))+"${format}")
			}
			fileLink.put("title",fileName)
			if(it.isFile()){
				fileLink.put("isFile",true)
				<#if currentLevel==3>
					fileLink.put("size",org.apache.commons.io.FileUtils.byteCountToDisplaySize(it.length()))
				</#if>
			}
			<#if currentLevel==3>
				fileLink.put("date",model.timestampForDisplay(it.lastModified()))
			</#if>
			navLinks.put(fileName,fileLink)
		}
		model.setPageNavLevel${currentLevel}(navLinks)
	}		
</#macro>